on:
  workflow_call:
    inputs:
      package-path:
        required: true
        type: string

jobs:
  check-and-prepare:
    runs-on: ubuntu-latest
    outputs:
      should-continue: ${{ steps.check_changes.outputs.should-continue }}
      parent_dir: ${{ steps.get_parent_dir.outputs.parent_dir }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if changes are inside package path
        id: check_changes
        run: |
          rel_path="${{ inputs.package-path }}"
          rel_path="${rel_path#./}"
          if git diff --name-only origin/main...HEAD | grep -q "$rel_path"; then
            echo "should-continue=true" >> $GITHUB_OUTPUT
          else
            echo "should-continue=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-dotnet@v4
        if: steps.check_changes.outputs.should-continue == 'true'
        with:
          dotnet-version: '8.0.x'
          config-file: ./nuget.config

      - name: Get parent directory
        id: get_parent_dir
        run: |
          rel_path="${{ inputs.package-path }}"
          rel_path="${rel_path#./}"
          echo "DEBUG: rel_path=$rel_path"
          parent_dir=$(dirname "$rel_path")
          echo "DEBUG: parent_dir=$parent_dir"
          echo "parent_dir=$parent_dir" >> $GITHUB_OUTPUT

  build-dotnet:
    needs: check-and-prepare
    if: needs.check-and-prepare.outputs.should-continue == 'true'
    uses: ./.github/workflows/dotnet-build-template.yaml
    with:
      working-directory: ${{ needs.check-and-prepare.outputs.parent_dir }}

  post-build-checks:
    needs: build-dotnet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          config-file: ./nuget.config
      - name: Check if package version was updated
        id: get_version
        run: |
          CSPROJ=$(find "${{ inputs.package-path }}" -maxdepth 1 -name '*.csproj' | head -n 1)
          if [ -z "$CSPROJ" ]; then
            echo "No .csproj found in ${{ inputs.package-path }}"
            exit 1
          fi
          NAME=$(grep -m1 '<PackageId>' "$CSPROJ" | sed -E 's/.*<PackageId>(.*)<\/PackageId>.*/\1/')
          if [ -z "$NAME" ]; then
            NAME=$(grep -m1 '<AssemblyName>' "$CSPROJ" | sed -E 's/.*<AssemblyName>(.*)<\/AssemblyName>.*/\1/')
          fi
          VERSION=$(grep -m1 '<Version>' "$CSPROJ" | sed -E 's/.*<Version>(.*)<\/Version>.*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          SEARCH=$(dotnet package search "$NAME" --format json)
          echo $SEARCH
          FOUND=$(echo "$SEARCH" | jq '.searchResult[] | select(.sourceName=="AT.Public.NuGet")' | jq --arg VERSION "$VERSION" '.packages[] | select(.latestVersion == $VERSION) | .latestVersion' | tr -d '"')
          if [ "$FOUND" = "$VERSION" ]; then
            echo "You did not increase the version number. This version ($FOUND) is the same as the last published version."
            exit 1
          else
            echo "You increased the version number. The last published version was '$FOUND'. The new version $VERSION is going to be published when merging into main."
          fi

      - name: Check for changelog
        run: |
          CHANGELOG=$(find "${{ inputs.package-path }}" -maxdepth 1 -name 'CHANGELOG.md' | head -n 1)
          if [ -f "$CHANGELOG" ]; then
            echo "Changelog found."
            # Optionally, check if the changelog contains the version string
            if grep -q "${{ steps.get_version.outputs.version }}" "$CHANGELOG"; then
              echo "Changelog contains entry for version ${{ steps.get_version.outputs.version }}."
            else
              echo "WARNING: Changelog does not contain entry for version ${{ steps.get_version.outputs.version }}."
              exit 1
            fi
          else
            echo "ERROR: No changelog found. Please add a CHANGELOG.md file to the package path ${{ inputs.package-path }}."
            exit 1
          fi




