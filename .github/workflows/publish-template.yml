name: Publish changed package (reusable)

on:
  workflow_call:
    inputs:
      package-path:
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4
        with:
          dotnet-version: "8.0.x"
          source-url: https://pkgs.dev.azure.com/Atil-utvikling/Public/_packaging/AT.Public.NuGet/nuget/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.AZURE_DEVOPS_PUBLISH_PACKAGE_PAT}}

      - name: Get version and name from csproj file
        uses: ./.github/actions/get-metadata-from-csprojectfile
        id: get_metadata_from_csprojectfile
        with:
          package-path: ${{ inputs.package-path }}

      - name: Check if package version exists
        uses: ./.github/actions/nuget-version-check
        id: nuget_version_check
        with:
          name: ${{ steps.get_metadata_from_csprojectfile.outputs.name }}
          version: ${{ steps.get_metadata_from_csprojectfile.outputs.version }}

      - name: Publish package if not already published
        working-directory: "${{ inputs.package-path }}"
        if: steps.nuget_version_check.outputs.published == 'false'
        run: |
          dotnet pack -c Release
          dotnet nuget push "./bin/Release/*.nupkg" -k GithubDeployJob
          echo "Published ${{ steps.get_metadata_from_csprojectfile.outputs.name }} version ${{ steps.get_metadata_from_csprojectfile.outputs.version }}"
            
      - name: Extract changelog section for current version
        id: changelog
        working-directory: "${{ inputs.package-path }}"
        run: |
          VERSION="${{ steps.get_metadata_from_csprojectfile.outputs.version }}"
          if [ -f CHANGELOG.md ]; then
            awk -v ver="$VERSION" '
              BEGIN {found=0}
              # Match headings like ## 1.2.3 or ## [1.2.3]
              $0 ~ "^##[[:space:]]*\\[?"ver"\\]?" {found=1; print; next}
              found && /^##[[:space:]]*\[?[0-9]+\.[0-9]+\.[0-9]+/ {exit}
              found {print}
            ' CHANGELOG.md > section.txt
            echo 'changelog<<EOF' >> $GITHUB_OUTPUT
            cat section.txt >> $GITHUB_OUTPUT
            echo 'EOF' >> $GITHUB_OUTPUT
          else
            echo 'changelog=No changelog found.' >> $GITHUB_OUTPUT
          fi
      - name: Create GitHub Release 
        if: steps.nuget_version_check.outputs.published == 'false'
        uses: actions/create-release@v1.1.0
        with:
          tag_name: ${{ steps.get_metadata_from_csprojectfile.outputs.name }}-${{ steps.get_metadata_from_csprojectfile.outputs.version }}
          release_name: "Released ${{ steps.get_metadata_from_csprojectfile.outputs.name }} v${{ steps.get_metadata_from_csprojectfile.outputs.version }}"
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Stop if already published
        if: steps.nuget_version_check.outputs.published == 'true'
        run: |
          echo "Package ${{ steps.get_metadata_from_csprojectfile.outputs.name }} version ${{ steps.get_metadata_from_csprojectfile.outputs.version }} is already published. Skipping."
          exit 0

